//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SistemaBancario.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SistemaBancarioEntities : DbContext
    {
        public SistemaBancarioEntities()
            : base("name=SistemaBancarioEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int spActualizaCuenta(Nullable<int> monto, Nullable<int> idCuenta, Nullable<System.DateTime> fechaMovimiento)
        {
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(int));
    
            var idCuentaParameter = idCuenta.HasValue ?
                new ObjectParameter("idCuenta", idCuenta) :
                new ObjectParameter("idCuenta", typeof(int));
    
            var fechaMovimientoParameter = fechaMovimiento.HasValue ?
                new ObjectParameter("fechaMovimiento", fechaMovimiento) :
                new ObjectParameter("fechaMovimiento", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spActualizaCuenta", montoParameter, idCuentaParameter, fechaMovimientoParameter);
        }
    
        public virtual ObjectResult<spConsultaCuentaPorNumero_Result> spConsultaCuentaPorNumero(string numeroCuenta)
        {
            var numeroCuentaParameter = numeroCuenta != null ?
                new ObjectParameter("numeroCuenta", numeroCuenta) :
                new ObjectParameter("numeroCuenta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaCuentaPorNumero_Result>("spConsultaCuentaPorNumero", numeroCuentaParameter);
        }
    
        public virtual ObjectResult<spConsultaCuentas_Result> spConsultaCuentas(Nullable<int> idPersona)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaCuentas_Result>("spConsultaCuentas", idPersonaParameter);
        }
    
        public virtual ObjectResult<spConsultaMovimientos_Result> spConsultaMovimientos(Nullable<int> idCuenta)
        {
            var idCuentaParameter = idCuenta.HasValue ?
                new ObjectParameter("idCuenta", idCuenta) :
                new ObjectParameter("idCuenta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaMovimientos_Result>("spConsultaMovimientos", idCuentaParameter);
        }
    
        public virtual ObjectResult<spConsultaTiposCajero_Result> spConsultaTiposCajero()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaTiposCajero_Result>("spConsultaTiposCajero");
        }
    
        public virtual ObjectResult<spConsultaUsuarios_Result> spConsultaUsuarios(string usuario, string clave)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaUsuarios_Result>("spConsultaUsuarios", usuarioParameter, claveParameter);
        }
    
        public virtual int spCrearCuentas(Nullable<int> idPersona, string numeroCuenta, Nullable<System.DateTime> fechaCreacion)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            var numeroCuentaParameter = numeroCuenta != null ?
                new ObjectParameter("numeroCuenta", numeroCuenta) :
                new ObjectParameter("numeroCuenta", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("fechaCreacion", fechaCreacion) :
                new ObjectParameter("fechaCreacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearCuentas", idPersonaParameter, numeroCuentaParameter, fechaCreacionParameter);
        }
    
        public virtual int spInsertaMovimiento(Nullable<int> idCuenta, Nullable<int> idTipoMovimiento, Nullable<int> monto, Nullable<System.DateTime> fechaMovimiento)
        {
            var idCuentaParameter = idCuenta.HasValue ?
                new ObjectParameter("idCuenta", idCuenta) :
                new ObjectParameter("idCuenta", typeof(int));
    
            var idTipoMovimientoParameter = idTipoMovimiento.HasValue ?
                new ObjectParameter("idTipoMovimiento", idTipoMovimiento) :
                new ObjectParameter("idTipoMovimiento", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(int));
    
            var fechaMovimientoParameter = fechaMovimiento.HasValue ?
                new ObjectParameter("fechaMovimiento", fechaMovimiento) :
                new ObjectParameter("fechaMovimiento", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertaMovimiento", idCuentaParameter, idTipoMovimientoParameter, montoParameter, fechaMovimientoParameter);
        }
    
        public virtual ObjectResult<spConsultaCuentaDestino_Result> spConsultaCuentaDestino(Nullable<int> idCuentaOrigen)
        {
            var idCuentaOrigenParameter = idCuentaOrigen.HasValue ?
                new ObjectParameter("idCuentaOrigen", idCuentaOrigen) :
                new ObjectParameter("idCuentaOrigen", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaCuentaDestino_Result>("spConsultaCuentaDestino", idCuentaOrigenParameter);
        }
    
        public virtual int spInsertaTransferencias(Nullable<int> idCuentaOrigen, Nullable<int> idCuentaDestino, Nullable<int> monto, Nullable<System.DateTime> fechaModificacion)
        {
            var idCuentaOrigenParameter = idCuentaOrigen.HasValue ?
                new ObjectParameter("idCuentaOrigen", idCuentaOrigen) :
                new ObjectParameter("idCuentaOrigen", typeof(int));
    
            var idCuentaDestinoParameter = idCuentaDestino.HasValue ?
                new ObjectParameter("idCuentaDestino", idCuentaDestino) :
                new ObjectParameter("idCuentaDestino", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(int));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("fechaModificacion", fechaModificacion) :
                new ObjectParameter("fechaModificacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertaTransferencias", idCuentaOrigenParameter, idCuentaDestinoParameter, montoParameter, fechaModificacionParameter);
        }
    }
}
